run:
  timeout: 5m
  tests: true

linters:
  enable:
    - goconst
    - revive
    - govet
    - ineffassign
    - staticcheck
    - dupl
    - depguard
    - unused
    - errcheck

linters-settings:
  goconst:
    min-occurrences: 3
    min-length: 3
  revive:
    rules:
      - name: unused-parameter
        arguments:
          allowNames: ["ctx","_"]
  depguard:
    rules:
      main:
        files:
          - $all
        deny:
          - pkg: github.com/go-chi/chi
            desc: "Use pkg/httpx facade instead of direct chi import"
          - pkg: github.com/go-chi/cors
            desc: "Use pkg/httpx.CORS facade"
          - pkg: github.com/prometheus/client_golang/prometheus
            desc: "Use pkg/metrics facade"
          - pkg: github.com/prometheus/client_golang/prometheus/promhttp
            desc: "Use pkg/metrics facade"
          - pkg: go.uber.org/zap
            desc: "Use logger facade"
          - pkg: github.com/redis/go-redis/v9
            desc: "Use pkg/redisx facade"
          - pkg: github.com/nats-io/nats.go
            desc: "Use pkg/natsx facade"
          - pkg: go.opentelemetry.io/otel
            desc: "Use pkg/observability facade"
          - pkg: github.com/google/uuid
            desc: "Use pkg/types (uuid re-exports)"
          - pkg: internal
            desc: "No cross-internal imports; use facades"
issues:
  exclude-use-default: false
  exclude-rules:
    - path: _test\.go
      linters:
        - dupl
    - path: pkg/types/
      linters:
        - depguard
    - path: internal/events/
      linters:
        - depguard
    - path: internal/nats/
      linters:
        - depguard