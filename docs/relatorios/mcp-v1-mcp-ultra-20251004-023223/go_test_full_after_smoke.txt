# ./tests/integration
stat E:\vertikon\business\SaaS\templates\mcp-ultra\tests\integration: directory not found
FAIL	./tests/integration [setup failed]
# github.com/vertikon/mcp-ultra/internal/observability
internal\observability\integration.go:48:3: unknown field MetricsInterval in struct literal of type TelemetryConfig
internal\observability\integration.go:49:3: unknown field HistogramBuckets in struct literal of type TelemetryConfig
internal\observability\integration.go:52:3: unknown field JaegerEnabled in struct literal of type TelemetryConfig
internal\observability\integration.go:54:3: unknown field JaegerUser in struct literal of type TelemetryConfig
internal\observability\integration.go:55:3: unknown field JaegerPassword in struct literal of type TelemetryConfig
internal\observability\integration.go:57:3: unknown field OTLPEnabled in struct literal of type TelemetryConfig
internal\observability\integration.go:59:3: unknown field OTLPInsecure in struct literal of type TelemetryConfig
internal\observability\integration.go:60:3: unknown field OTLPHeaders in struct literal of type TelemetryConfig
internal\observability\integration.go:62:3: unknown field ConsoleEnabled in struct literal of type TelemetryConfig
internal\observability\integration.go:85:24: s.telemetry.Start undefined (type *TelemetryService has no field or method Start)
internal\observability\integration.go:85:24: too many errors
# github.com/vertikon/mcp-ultra/internal/handlers
# internal/coverage/rtcov
compile: version "go1.25.0" does not match go tool version "go1.25.1"
# internal/goos
compile: version "go1.25.0" does not match go tool version "go1.25.1"
# internal/unsafeheader
compile: version "go1.25.0" does not match go tool version "go1.25.1"
# internal/godebugs
compile: version "go1.25.0" does not match go tool version "go1.25.1"
# internal/byteorder
compile: version "go1.25.0" does not match go tool version "go1.25.1"
# internal/goarch
compile: version "go1.25.0" does not match go tool version "go1.25.1"
# internal/goexperiment
compile: version "go1.25.0" does not match go tool version "go1.25.1"
# internal/asan
compile: version "go1.25.0" does not match go tool version "go1.25.1"
# internal/profilerecord
compile: version "go1.25.0" does not match go tool version "go1.25.1"
# math/bits
compile: version "go1.25.0" does not match go tool version "go1.25.1"
# internal/msan
compile: version "go1.25.0" does not match go tool version "go1.25.1"
# unicode
compile: version "go1.25.0" does not match go tool version "go1.25.1"
# internal/trace/tracev2
compile: version "go1.25.0" does not match go tool version "go1.25.1"
# internal/cpu
compile: version "go1.25.0" does not match go tool version "go1.25.1"
# unicode/utf8
compile: version "go1.25.0" does not match go tool version "go1.25.1"
# cmp
compile: version "go1.25.0" does not match go tool version "go1.25.1"
# internal/itoa
compile: version "go1.25.0" does not match go tool version "go1.25.1"
# structs
compile: version "go1.25.0" does not match go tool version "go1.25.1"
# internal/syscall/windows/sysdll
compile: version "go1.25.0" does not match go tool version "go1.25.1"
# unicode/utf16
compile: version "go1.25.0" does not match go tool version "go1.25.1"
# log/internal
compile: version "go1.25.0" does not match go tool version "go1.25.1"
# internal/coverage/uleb128
compile: version "go1.25.0" does not match go tool version "go1.25.1"
# internal/coverage
compile: version "go1.25.0" does not match go tool version "go1.25.1"
# sync/atomic
compile: version "go1.25.0" does not match go tool version "go1.25.1"
# encoding
compile: version "go1.25.0" does not match go tool version "go1.25.1"
# internal/nettrace
compile: version "go1.25.0" does not match go tool version "go1.25.1"
# internal/coverage/calloc
compile: version "go1.25.0" does not match go tool version "go1.25.1"
ok  	github.com/vertikon/mcp-ultra/tests/smoke	0.292s	coverage: [no statements]
FAIL	github.com/vertikon/mcp-ultra [build failed]
