{
  "ProjectName": "mcp-ultra",
  "Timestamp": "2025-10-18 00:40:12",
  "Critical": [
    {
      "Type": "Erros não tratados",
      "Severity": "crítico",
      "Location": "múltiplos arquivos",
      "Description": "26 erro(s) não tratado(s)",
      "Suggestion": "Adicione verificação de erro: if err != nil { ... }",
      "Fixability": {
        "Safe": false,
        "RollbackEasy": true,
        "AffectsBehavior": true,
        "RequiresReview": true,
        "AutoFixCommand": "",
        "ManualSteps": "1. Para cada erro não tratado, decida:\n   a) Retornar o erro (wrap com context)\n   b) Logar e continuar\n   c) Logar e retornar\n2. Adicione if err != nil { } manualmente",
        "NonFixableReason": "BUSINESS_LOGIC"
      },
      "Examples": [
        "error: failed to check packages: errors while loading package github.com/vertikon/mcp-ultra/internal/handlers/http [github.com/vertikon/mcp-ultra/internal/handlers/http.test]: [-: # github.com/vertikon/mcp-ultra/internal/handlers/http [github.com/vertikon/mcp-ultra/internal/handlers/http.test]",
        "internal\\handlers\\http\\router_test.go:109:22: cannot use mockTaskService (variable of type *MockTaskService) as TaskService value in argument to NewRouter: *MockTaskService does not implement TaskService (wrong type for method DeleteTask)",
        "\t\thave DeleteTask(context.Context, string) error",
        "\t\twant DeleteTask(context.Context, uuid.UUID) error",
        "internal\\handlers\\http\\router_test.go:182:24: cannot use mockTaskService (variable of type *MockTaskService) as TaskService value in argument to NewRouter: *MockTaskService does not implement TaskService (wrong type for method DeleteTask)",
        "\t\thave DeleteTask(context.Context, string) error",
        "\t\twant DeleteTask(context.Context, uuid.UUID) error",
        "internal\\handlers\\http\\router_test.go:204:22: cannot use mockTaskService (variable of type *MockTaskService) as TaskService value in argument to NewRouter: *MockTaskService does not implement TaskService (wrong type for method DeleteTask)",
        "\t\thave DeleteTask(context.Context, string) error",
        "\t\twant DeleteTask(context.Context, uuid.UUID) error",
        "internal\\handlers\\http\\router_test.go:370:22: cannot use mockTaskService (variable of type *MockTaskService) as TaskService value in argument to NewRouter: *MockTaskService does not implement TaskService (wrong type for method DeleteTask)",
        "\t\thave DeleteTask(context.Context, string) error",
        "\t\twant DeleteTask(context.Context, uuid.UUID) error",
        "internal\\handlers\\http\\router_test.go:405:22: cannot use mockTaskService (variable of type *MockTaskService) as TaskService value in argument to NewRouter: *MockTaskService does not implement TaskService (wrong type for method DeleteTask)",
        "\t\thave DeleteTask(context.Context, string) error"
      ],
      "NonFixableReason": "BUSINESS_LOGIC"
    },
    {
      "Type": "Nil Pointer Check",
      "Severity": "crítico",
      "Location": "múltiplos arquivos",
      "Description": "1 potencial(is) nil pointer issue(s)",
      "Suggestion": "Adicione nil checks antes de dereferenciar pointers",
      "Fixability": {
        "Safe": false,
        "RollbackEasy": false,
        "AffectsBehavior": true,
        "RequiresReview": true,
        "AutoFixCommand": "",
        "ManualSteps": "1. Para type assertions: value, ok := x.(Type)\n2. Sempre verifique if !ok antes de usar value\n3. Para pointer dereference: if ptr != nil { ptr.Field }\n4. Considere usar nilaway para análise estática",
        "NonFixableReason": "CONCURRENCY"
      },
      "Examples": [
        "mocks.go:26 type assertion sem verificação"
      ],
      "NonFixableReason": "CONCURRENCY"
    }
  ],
  "Medium": [],
  "Low": [
    {
      "Type": "Linter limpo",
      "Severity": "baixo",
      "Location": "múltiplos arquivos",
      "Description": "Linter encontrou problemas",
      "Suggestion": "Corrija os problemas manualmente (NÃO use --fix)",
      "Fixability": {
        "Safe": false,
        "RollbackEasy": false,
        "AffectsBehavior": true,
        "RequiresReview": true,
        "AutoFixCommand": "",
        "ManualSteps": "1. Analise cada issue do linter\n2. Corrija manualmente, entendendo o contexto\n3. NÃO use golangci-lint run --fix (pode quebrar código)\n4. Execute testes após cada correção",
        "NonFixableReason": "BUSINESS_LOGIC"
      },
      "Examples": [
        "level=error msg=\"[linters_context] typechecking error: : # github.com/vertikon/mcp-ultra/internal/handlers/http [github.com/vertikon/mcp-ultra/internal/handlers/http.test]\\ninternal\\\\handlers\\\\http\\\\router_test.go:109:22: cannot use mockTaskService (variable of type *MockTaskService) as TaskService value in argument to NewRouter: *MockTaskService does not implement TaskService (wrong type for method DeleteTask)\\n\\t\\thave DeleteTask(context.Context, string) error\\n\\t\\twant DeleteTask(context.Context, uuid.UUID) error\\ninternal\\\\handlers\\\\http\\\\router_test.go:182:24: cannot use mockTaskService (variable of type *MockTaskService) as TaskService value in argument to NewRouter: *MockTaskService does not implement TaskService (wrong type for method DeleteTask)\\n\\t\\thave DeleteTask(context.Context, string) error\\n\\t\\twant DeleteTask(context.Context, uuid.UUID) error\\ninternal\\\\handlers\\\\http\\\\router_test.go:204:22: cannot use mockTaskService (variable of type *MockTaskService) as TaskService value in argument to NewRouter: *MockTaskService does not implement TaskService (wrong type for method DeleteTask)\\n\\t\\thave DeleteTask(context.Context, string) error\\n\\t\\twant DeleteTask(context.Context, uuid.UUID) error\\ninternal\\\\handlers\\\\http\\\\router_test.go:370:22: cannot use mockTaskService (variable of type *MockTaskService) as TaskService value in argument to NewRouter: *MockTaskService does not implement TaskService (wrong type for method DeleteTask)\\n\\t\\thave DeleteTask(context.Context, string) error\\n\\t\\twant DeleteTask(context.Context, uuid.UUID) error\\ninternal\\\\handlers\\\\http\\\\router_test.go:405:22: cannot use mockTaskService (variable of type *MockTaskService) as TaskService value in argument to NewRouter: *MockTaskService does not implement TaskService (wrong type for method DeleteTask)\\n\\t\\thave DeleteTask(context.Context, string) error\\n\\t\\twant DeleteTask(context.Context, uuid.UUID) error\"",
        "level=error msg=\"[linters_context] typechecking error: : # github.com/vertikon/mcp-ultra/test/component [github.com/vertikon/mcp-ultra/test/component.test]\\ntest\\\\component\\\\task_service_test.go:40:3: cannot use suite.validator (variable of type *mocks.MockValidator) as domain.UserRepository value in argument to services.NewTaskService: *mocks.MockValidator does not implement domain.UserRepository (missing method Create)\\ntest\\\\component\\\\task_service_test.go:65:3: unknown field Metadata in struct literal of type services.CreateTaskRequest\\ntest\\\\component\\\\task_service_test.go:78:20: req.Metadata undefined (type *services.CreateTaskRequest has no field or method Metadata)\\ntest\\\\component\\\\task_service_test.go:97:55: too many arguments in call to suite.service.CreateTask\\n\\thave (context.Context, uuid.UUID, *services.CreateTaskRequest)\\n\\twant (context.Context, services.CreateTaskRequest)\\ntest\\\\component\\\\task_service_test.go:118:29: undefined: services.ValidationError\\ntest\\\\component\\\\task_service_test.go:127:55: too many arguments in call to suite.service.CreateTask\\n\\thave (context.Context, uuid.UUID, *services.CreateTaskRequest)\\n\\twant (context.Context, services.CreateTaskRequest)\\ntest\\\\component\\\\task_service_test.go:151:52: too many arguments in call to suite.service.GetTask\\n\\thave (context.Context, uuid.UUID, uuid.UUID)\\n\\twant (context.Context, uuid.UUID)\\ntest\\\\component\\\\task_service_test.go:171:95: undefined: services.ErrNotFound\\ntest\\\\component\\\\task_service_test.go:176:52: too many arguments in call to suite.service.GetTask\\n\\thave (context.Context, uuid.UUID, uuid.UUID)\\n\\twant (context.Context, uuid.UUID)\\ntest\\\\component\\\\task_service_test.go:190:95: undefined: services.ErrNotFound\\ntest\\\\component\\\\task_service_test.go:190:95: too many errors\"",
        "level=error msg=\"[linters_context] typechecking error: : # github.com/vertikon/mcp-ultra/test/property [github.com/vertikon/mcp-ultra/test/property.test]\\ntest\\\\property\\\\task_properties_test.go:231:4: declared and not used: originalTitle\"",
        "internal\\observability\\middleware.go:189: 189-225 lines are duplicate of `internal\\observability\\middleware.go:228-264` (dupl)",
        "func (ts *TelemetryService) CacheOperation(",
        "\tctx context.Context,",
        "\toperation string,",
        "\tkey string,",
        "\tfn func(context.Context) error,",
        ") error {"
      ],
      "NonFixableReason": "BUSINESS_LOGIC"
    }
  ],
  "TotalGAPs": 3,
  "Score": 85,
  "AutoFixable": 0,
  "Manual": 3
}