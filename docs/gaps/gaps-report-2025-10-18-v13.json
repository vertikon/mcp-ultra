{
  "ProjectName": "mcp-ultra",
  "Timestamp": "2025-10-18 01:18:24",
  "Critical": [
    {
      "Type": "Erros não tratados",
      "Severity": "crítico",
      "Location": "múltiplos arquivos",
      "Description": "68 erro(s) não tratado(s)",
      "Suggestion": "Adicione verificação de erro: if err != nil { ... }",
      "Fixability": {
        "Safe": false,
        "RollbackEasy": true,
        "AffectsBehavior": true,
        "RequiresReview": true,
        "AutoFixCommand": "",
        "ManualSteps": "1. Para cada erro não tratado, decida:\n   a) Retornar o erro (wrap com context)\n   b) Logar e continuar\n   c) Logar e retornar\n2. Adicione if err != nil { } manualmente",
        "NonFixableReason": "BUSINESS_LOGIC"
      },
      "Examples": [
        "internal\\cache\\distributed_test.go:283:25:\tdefer redisClient.Close()",
        "internal\\compliance\\framework.go:238:35:\tcf.auditLogger.LogDataProcessing(ctx, subjectID, purpose, \"consent_denied\", nil)",
        "internal\\compliance\\framework.go:245:35:\tcf.auditLogger.LogDataProcessing(ctx, subjectID, purpose, \"pii_error\", nil)",
        "internal\\compliance\\framework.go:456:28:\tcf.auditLogger.LogConsent(ctx, userID.String(), purposes, source, \"granted\")",
        "internal\\compliance\\framework.go:485:28:\tcf.auditLogger.LogConsent(ctx, userID.String(), purposes, \"system\", \"withdrawn\")",
        "internal\\config\\config.go:289:18:\tdefer file.Close()",
        "internal\\config\\tls_test.go:364:12:\tos.Remove(file.Name())",
        "internal\\handlers\\health.go:17:27:\tjson.NewEncoder(w).Encode(map[string]string{\"status\": \"alive\"})",
        "internal\\handlers\\health.go:23:27:\tjson.NewEncoder(w).Encode(map[string]string{\"status\": \"ready\"})",
        "internal\\handlers\\health.go:29:27:\tjson.NewEncoder(w).Encode(map[string]string{\"status\": \"ok\"})",
        "internal\\handlers\\health.go:44:10:\tw.Write([]byte(\"# Metrics placeholder\\n\"))",
        "internal\\handlers\\http\\health.go:155:9:\tw.Write([]byte(\"OK\"))",
        "internal\\handlers\\http\\health.go:191:9:\tw.Write([]byte(\"Ready\"))",
        "internal\\handlers\\http\\health.go:202:9:\tw.Write([]byte(\"Alive\"))",
        "internal\\handlers\\http\\router.go:121:9:\tw.Write([]byte(`{\"status\": \"healthy\", \"timestamp\": \"` + time.Now().Format(time.RFC3339) + `\"}`))"
      ],
      "NonFixableReason": "BUSINESS_LOGIC"
    }
  ],
  "Medium": [],
  "Low": [
    {
      "Type": "Linter limpo",
      "Severity": "baixo",
      "Location": "múltiplos arquivos",
      "Description": "Linter encontrou problemas",
      "Suggestion": "Corrija os problemas manualmente (NÃO use --fix)",
      "Fixability": {
        "Safe": false,
        "RollbackEasy": false,
        "AffectsBehavior": true,
        "RequiresReview": true,
        "AutoFixCommand": "",
        "ManualSteps": "1. Analise cada issue do linter\n2. Corrija manualmente, entendendo o contexto\n3. NÃO use golangci-lint run --fix (pode quebrar código)\n4. Execute testes após cada correção",
        "NonFixableReason": "BUSINESS_LOGIC"
      },
      "Examples": [
        "main.go:27:19: Error return value of `logger.Sync` is not checked (errcheck)",
        "\tdefer logger.Sync()",
        "\t                 ^",
        "basic_test.go:18:5: SA4000: identical expressions on the left and right side of the '!=' operator (staticcheck)",
        "\tif true != true {",
        "\t   ^",
        "internal\\ai\\telemetry\\metrics_test.go:126:33: unused-parameter: parameter 't' seems to be unused, consider removing or renaming it as _ (revive)",
        "func TestNoOpWhenNotInitialized(t *testing.T) {",
        "                                ^",
        "internal\\ai\\telemetry\\metrics.go:7:2: import 'github.com/prometheus/client_golang/prometheus' is not allowed from list 'main': Use pkg/metrics facade (depguard)"
      ],
      "NonFixableReason": "BUSINESS_LOGIC"
    }
  ],
  "TotalGAPs": 2,
  "Score": 90,
  "AutoFixable": 0,
  "Manual": 2
}