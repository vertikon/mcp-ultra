{
  "ProjectName": "mcp-ultra",
  "Timestamp": "2025-10-19 01:50:01",
  "Critical": [
    {
      "Type": "Erros não tratados",
      "Severity": "crítico",
      "Location": "múltiplos arquivos",
      "Description": "2 erro(s) não tratado(s)",
      "Suggestion": "Adicione verificação de erro: if err != nil { ... }",
      "Fixability": {
        "Safe": false,
        "RollbackEasy": true,
        "AffectsBehavior": true,
        "RequiresReview": true,
        "AutoFixCommand": "",
        "ManualSteps": "1. Para cada erro não tratado, decida:\n   a) Retornar o erro (wrap com context)\n   b) Logar e continuar\n   c) Logar e retornar\n2. Adicione if err != nil { } manualmente",
        "NonFixableReason": "BUSINESS_LOGIC"
      },
      "Examples": [
        "error: failed to check packages: errors while loading package github.com/vertikon/mcp-ultra/test/component [github.com/vertikon/mcp-ultra/test/component.test]: [-: # github.com/vertikon/mcp-ultra/test/component [github.com/vertikon/mcp-ultra/test/component.test]",
        "test\\component\\task_service_test.go:52:3: cannot use suite.logger (variable of type interface{}) as *zap.Logger value in argument to services.NewTaskService: need type assertion E:\\vertikon\\business\\SaaS\\templates\\mcp-ultra\\test\\component\\task_service_test.go:52:3: cannot use suite.logger (variable of type interface{}) as *zap.Logger value in argument to services.NewTaskService: need type assertion]"
      ],
      "NonFixableReason": "BUSINESS_LOGIC"
    }
  ],
  "Medium": [],
  "Low": [
    {
      "Type": "Formatação (gofmt)",
      "Severity": "baixo",
      "Location": "múltiplos arquivos",
      "Description": "1 arquivo(s) mal formatado(s)",
      "Suggestion": "Execute: gofmt -w . ou gofumpt -w .",
      "Fixability": {
        "Safe": true,
        "RollbackEasy": true,
        "AffectsBehavior": false,
        "RequiresReview": false,
        "AutoFixCommand": "gofmt -w . \u0026\u0026 goimports -w .",
        "ManualSteps": "",
        "NonFixableReason": ""
      },
      "Examples": [
        "test\\component\\task_service_test.go"
      ],
      "NonFixableReason": ""
    },
    {
      "Type": "Linter limpo",
      "Severity": "baixo",
      "Location": "múltiplos arquivos",
      "Description": "Linter encontrou problemas",
      "Suggestion": "Corrija os problemas manualmente (NÃO use --fix)",
      "Fixability": {
        "Safe": false,
        "RollbackEasy": false,
        "AffectsBehavior": true,
        "RequiresReview": true,
        "AutoFixCommand": "",
        "ManualSteps": "1. Analise cada issue do linter\n2. Corrija manualmente, entendendo o contexto\n3. NÃO use golangci-lint run --fix (pode quebrar código)\n4. Execute testes após cada correção",
        "NonFixableReason": "BUSINESS_LOGIC"
      },
      "Examples": [
        "level=error msg=\"[linters_context] typechecking error: : # github.com/vertikon/mcp-ultra/test/component [github.com/vertikon/mcp-ultra/test/component.test]\\ntest\\\\component\\\\task_service_test.go:52:3: cannot use suite.logger (variable of type interface{}) as *zap.Logger value in argument to services.NewTaskService: need type assertion\"",
        "basic_test.go:18:5: SA4000: identical expressions on the left and right side of the '!=' operator (staticcheck)",
        "\tif true != true {",
        "\t   ^",
        "internal\\ai\\wiring\\wiring.go:9:2: import 'github.com/prometheus/client_golang/prometheus' is not allowed from list 'main': Use pkg/metrics facade (depguard)",
        "\t\"github.com/prometheus/client_golang/prometheus\"",
        "\t^",
        "internal\\ai\\wiring\\wiring_test.go:9:2: import 'github.com/prometheus/client_golang/prometheus' is not allowed from list 'main': Use pkg/metrics facade (depguard)",
        "\t\"github.com/prometheus/client_golang/prometheus\"",
        "\t^"
      ],
      "NonFixableReason": "BUSINESS_LOGIC"
    }
  ],
  "TotalGAPs": 3,
  "Score": 85,
  "AutoFixable": 1,
  "Manual": 2
}