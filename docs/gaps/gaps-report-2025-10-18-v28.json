{
  "ProjectName": "mcp-ultra",
  "Timestamp": "2025-10-18 22:05:42",
  "Critical": [
    {
      "Type": "Erros não tratados",
      "Severity": "crítico",
      "Location": "múltiplos arquivos",
      "Description": "25 erro(s) não tratado(s)",
      "Suggestion": "Adicione verificação de erro: if err != nil { ... }",
      "Fixability": {
        "Safe": false,
        "RollbackEasy": true,
        "AffectsBehavior": true,
        "RequiresReview": true,
        "AutoFixCommand": "",
        "ManualSteps": "1. Para cada erro não tratado, decida:\n   a) Retornar o erro (wrap com context)\n   b) Logar e continuar\n   c) Logar e retornar\n2. Adicione if err != nil { } manualmente",
        "NonFixableReason": "BUSINESS_LOGIC"
      },
      "Examples": [
        "internal\\observability\\telemetry_test.go:330:35:\tservice.IncrementRequestCounter(ctx, \"GET\", \"/test\", \"200\")",
        "internal\\observability\\telemetry_test.go:331:33:\tservice.RecordRequestDuration(ctx, \"GET\", \"/test\", time.Millisecond*100)",
        "internal\\observability\\telemetry_test.go:332:33:\tservice.IncrementErrorCounter(ctx, \"test\", \"concurrent\")",
        "internal\\observability\\telemetry_test.go:333:32:\tservice.RecordProcessingTime(ctx, \"concurrent_task\", time.Millisecond*50)",
        "internal\\observability\\telemetry_test.go:354:20:\tdefer service.Stop(ctx)",
        "internal\\repository\\postgres\\task_repository.go:299:17:\tjson.Unmarshal(tagsJSON, \u0026task.Tags)",
        "internal\\repository\\postgres\\task_repository.go:305:17:\tjson.Unmarshal(metadataJSON, \u0026task.Metadata)",
        "internal\\security\\auth.go:174:23:\tdefer resp.Body.Close()",
        "internal\\security\\auth.go:259:27:\tjson.NewEncoder(w).Encode(map[string]string{",
        "internal\\security\\auth.go:269:27:\tjson.NewEncoder(w).Encode(map[string]string{",
        "internal\\security\\auth_test.go:107:10:\tw.Write([]byte(\"success\"))",
        "internal\\security\\auth_test.go:244:10:\tw.Write([]byte(\"healthy\"))",
        "internal\\security\\auth_test.go:285:10:\tw.Write([]byte(\"authorized\"))",
        "internal\\security\\auth_test.go:345:10:\tw.Write([]byte(\"authorized\"))",
        "internal\\security\\opa.go:100:23:\tdefer resp.Body.Close()"
      ],
      "NonFixableReason": "BUSINESS_LOGIC"
    }
  ],
  "Medium": [],
  "Low": [
    {
      "Type": "Formatação (gofmt)",
      "Severity": "baixo",
      "Location": "múltiplos arquivos",
      "Description": "Erro ao verificar formatação",
      "Suggestion": "",
      "Fixability": {
        "Safe": false,
        "RollbackEasy": false,
        "AffectsBehavior": false,
        "RequiresReview": false,
        "AutoFixCommand": "",
        "ManualSteps": "",
        "NonFixableReason": ""
      },
      "Examples": null,
      "NonFixableReason": ""
    },
    {
      "Type": "Linter limpo",
      "Severity": "baixo",
      "Location": "múltiplos arquivos",
      "Description": "Linter encontrou problemas",
      "Suggestion": "Corrija os problemas manualmente (NÃO use --fix)",
      "Fixability": {
        "Safe": false,
        "RollbackEasy": false,
        "AffectsBehavior": true,
        "RequiresReview": true,
        "AutoFixCommand": "",
        "ManualSteps": "1. Analise cada issue do linter\n2. Corrija manualmente, entendendo o contexto\n3. NÃO use golangci-lint run --fix (pode quebrar código)\n4. Execute testes após cada correção",
        "NonFixableReason": "BUSINESS_LOGIC"
      },
      "Examples": [
        "automation\\autocommit.go:7:2: SA1019: \"io/ioutil\" has been deprecated since Go 1.19: As of Go 1.16, the same functionality is now provided by package [io] or package [os], and those implementations should be preferred in new code. See the specific function documentation for details. (staticcheck)",
        "\t\"io/ioutil\"",
        "\t^",
        "internal\\domain\\models.go:6:2: import 'github.com/google/uuid' is not allowed from list 'main': Use pkg/types (uuid re-exports) (depguard)",
        "\t\"github.com/google/uuid\"",
        "\t^",
        "internal\\domain\\repository.go:6:2: import 'github.com/google/uuid' is not allowed from list 'main': Use pkg/types (uuid re-exports) (depguard)",
        "\t\"github.com/google/uuid\"",
        "\t^",
        "internal\\domain\\models_test.go:7:2: import 'github.com/google/uuid' is not allowed from list 'main': Use pkg/types (uuid re-exports) (depguard)"
      ],
      "NonFixableReason": "BUSINESS_LOGIC"
    }
  ],
  "TotalGAPs": 3,
  "Score": 85,
  "AutoFixable": 0,
  "Manual": 3
}