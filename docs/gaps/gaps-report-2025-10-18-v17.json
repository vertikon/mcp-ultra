{
  "ProjectName": "mcp-ultra",
  "Timestamp": "2025-10-18 02:10:14",
  "Critical": [
    {
      "Type": "Erros não tratados",
      "Severity": "crítico",
      "Location": "múltiplos arquivos",
      "Description": "26 erro(s) não tratado(s)",
      "Suggestion": "Adicione verificação de erro: if err != nil { ... }",
      "Fixability": {
        "Safe": false,
        "RollbackEasy": true,
        "AffectsBehavior": true,
        "RequiresReview": true,
        "AutoFixCommand": "",
        "ManualSteps": "1. Para cada erro não tratado, decida:\n   a) Retornar o erro (wrap com context)\n   b) Logar e continuar\n   c) Logar e retornar\n2. Adicione if err != nil { } manualmente",
        "NonFixableReason": "BUSINESS_LOGIC"
      },
      "Examples": [
        "error: failed to check packages: errors while loading package github.com/vertikon/mcp-ultra/internal/features [github.com/vertikon/mcp-ultra/internal/features.test]: [-: # github.com/vertikon/mcp-ultra/internal/features [github.com/vertikon/mcp-ultra/internal/features.test]",
        "internal\\features\\manager_test.go:86:11: cannot use cacheRepo (variable of type *MockCacheRepository) as domain.CacheRepository value in struct literal: *MockCacheRepository does not implement domain.CacheRepository (wrong type for method Get)",
        "\t\thave Get(context.Context, string) (string, error)",
        "\t\twant Get(context.Context, string) ([]byte, error)",
        "internal\\features\\manager_test.go:131:11: cannot use cacheRepo (variable of type *MockCacheRepository) as domain.CacheRepository value in struct literal: *MockCacheRepository does not implement domain.CacheRepository (wrong type for method Get)",
        "\t\thave Get(context.Context, string) (string, error)",
        "\t\twant Get(context.Context, string) ([]byte, error)",
        "internal\\features\\manager_test.go:161:11: cannot use cacheRepo (variable of type *MockCacheRepository) as domain.CacheRepository value in struct literal: *MockCacheRepository does not implement domain.CacheRepository (wrong type for method Get)",
        "\t\thave Get(context.Context, string) (string, error)",
        "\t\twant Get(context.Context, string) ([]byte, error)",
        "internal\\features\\manager_test.go:193:11: cannot use cacheRepo (variable of type *MockCacheRepository) as domain.CacheRepository value in struct literal: *MockCacheRepository does not implement domain.CacheRepository (wrong type for method Get)",
        "\t\thave Get(context.Context, string) (string, error)",
        "\t\twant Get(context.Context, string) ([]byte, error)",
        "internal\\features\\manager_test.go:224:11: cannot use cacheRepo (variable of type *MockCacheRepository) as domain.CacheRepository value in struct literal: *MockCacheRepository does not implement domain.CacheRepository (wrong type for method Get)",
        "\t\thave Get(context.Context, string) (string, error)"
      ],
      "NonFixableReason": "BUSINESS_LOGIC"
    }
  ],
  "Medium": [],
  "Low": [
    {
      "Type": "Linter limpo",
      "Severity": "baixo",
      "Location": "múltiplos arquivos",
      "Description": "Linter encontrou problemas",
      "Suggestion": "Corrija os problemas manualmente (NÃO use --fix)",
      "Fixability": {
        "Safe": false,
        "RollbackEasy": false,
        "AffectsBehavior": true,
        "RequiresReview": true,
        "AutoFixCommand": "",
        "ManualSteps": "1. Analise cada issue do linter\n2. Corrija manualmente, entendendo o contexto\n3. NÃO use golangci-lint run --fix (pode quebrar código)\n4. Execute testes após cada correção",
        "NonFixableReason": "BUSINESS_LOGIC"
      },
      "Examples": [
        "level=error msg=\"[linters_context] typechecking error: : # github.com/vertikon/mcp-ultra/internal/features [github.com/vertikon/mcp-ultra/internal/features.test]\\ninternal\\\\features\\\\manager_test.go:86:11: cannot use cacheRepo (variable of type *MockCacheRepository) as domain.CacheRepository value in struct literal: *MockCacheRepository does not implement domain.CacheRepository (wrong type for method Get)\\n\\t\\thave Get(context.Context, string) (string, error)\\n\\t\\twant Get(context.Context, string) ([]byte, error)\\ninternal\\\\features\\\\manager_test.go:131:11: cannot use cacheRepo (variable of type *MockCacheRepository) as domain.CacheRepository value in struct literal: *MockCacheRepository does not implement domain.CacheRepository (wrong type for method Get)\\n\\t\\thave Get(context.Context, string) (string, error)\\n\\t\\twant Get(context.Context, string) ([]byte, error)\\ninternal\\\\features\\\\manager_test.go:161:11: cannot use cacheRepo (variable of type *MockCacheRepository) as domain.CacheRepository value in struct literal: *MockCacheRepository does not implement domain.CacheRepository (wrong type for method Get)\\n\\t\\thave Get(context.Context, string) (string, error)\\n\\t\\twant Get(context.Context, string) ([]byte, error)\\ninternal\\\\features\\\\manager_test.go:193:11: cannot use cacheRepo (variable of type *MockCacheRepository) as domain.CacheRepository value in struct literal: *MockCacheRepository does not implement domain.CacheRepository (wrong type for method Get)\\n\\t\\thave Get(context.Context, string) (string, error)\\n\\t\\twant Get(context.Context, string) ([]byte, error)\\ninternal\\\\features\\\\manager_test.go:224:11: cannot use cacheRepo (variable of type *MockCacheRepository) as domain.CacheRepository value in struct literal: *MockCacheRepository does not implement domain.CacheRepository (wrong type for method Get)\\n\\t\\thave Get(context.Context, string) (string, error)\\n\\t\\twant Get(context.Context, string) ([]byte, error)\"",
        "level=error msg=\"[linters_context] typechecking error: : # github.com/vertikon/mcp-ultra/internal/handlers [github.com/vertikon/mcp-ultra/internal/handlers.test]\\ninternal\\\\handlers\\\\health_test.go:10:7: not enough arguments in call to NewHealthHandler\\n\\thave ()\\n\\twant (*zap.Logger)\\ninternal\\\\handlers\\\\health_test.go:27:7: not enough arguments in call to NewHealthHandler\\n\\thave ()\\n\\twant (*zap.Logger)\\ninternal\\\\handlers\\\\health_test.go:39:7: not enough arguments in call to NewHealthHandler\\n\\thave ()\\n\\twant (*zap.Logger)\\ninternal\\\\handlers\\\\health_test.go:51:7: not enough arguments in call to NewHealthHandler\\n\\thave ()\\n\\twant (*zap.Logger)\\ninternal\\\\handlers\\\\health_test.go:68:7: not enough arguments in call to NewHealthHandler\\n\\thave ()\\n\\twant (*zap.Logger)\\ninternal\\\\handlers\\\\health_test.go:85:7: not enough arguments in call to NewHealthHandler\\n\\thave ()\\n\\twant (*zap.Logger)\"",
        "level=error msg=\"[linters_context] typechecking error: : # github.com/vertikon/mcp-ultra/internal/services [github.com/vertikon/mcp-ultra/internal/services.test]\\ninternal\\\\services\\\\task_service_test.go:199:28: cannot use taskRepo (variable of type *mockTaskRepository) as domain.TaskRepository value in argument to NewTaskService: *mockTaskRepository does not implement domain.TaskRepository (wrong type for method Create)\\n\\t\\thave Create(context.Context, *domain.Task) error\\n\\t\\twant Create(context.Context, *domain.Task) (*domain.Task, error)\\ninternal\\\\services\\\\task_service_test.go:199:38: cannot use userRepo (variable of type *mockUserRepository) as domain.UserRepository value in argument to NewTaskService: *mockUserRepository does not implement domain.UserRepository (wrong type for method Create)\\n\\t\\thave Create(context.Context, *domain.User) error\\n\\t\\twant Create(context.Context, *domain.User) (*domain.User, error)\\ninternal\\\\services\\\\task_service_test.go:199:59: cannot use cacheRepo (variable of type *mockCacheRepository) as domain.CacheRepository value in argument to NewTaskService: *mockCacheRepository does not implement domain.CacheRepository (wrong type for method Get)\\n\\t\\thave Get(context.Context, string) (string, error)\\n\\t\\twant Get(context.Context, string) ([]byte, error)\"",
        "level=error msg=\"[linters_context] typechecking error: : # github.com/vertikon/mcp-ultra/test/component [github.com/vertikon/mcp-ultra/test/component.test]\\ntest\\\\component\\\\task_service_test.go:49:3: cannot use suite.taskRepo (variable of type *mocks.MockTaskRepository) as domain.TaskRepository value in argument to services.NewTaskService: *mocks.MockTaskRepository does not implement domain.TaskRepository (wrong type for method Create)\\n\\t\\thave Create(context.Context, *domain.Task) error\\n\\t\\twant Create(context.Context, *domain.Task) (*domain.Task, error)\\ntest\\\\component\\\\task_service_test.go:50:3: cannot use suite.userRepo (variable of type *mocks.MockUserRepository) as domain.UserRepository value in argument to services.NewTaskService: *mocks.MockUserRepository does not implement domain.UserRepository (wrong type for method Create)\\n\\t\\thave Create(context.Context, *domain.User) error\\n\\t\\twant Create(context.Context, *domain.User) (*domain.User, error)\\ntest\\\\component\\\\task_service_test.go:52:3: cannot use suite.cacheRepo (variable of type *mocks.MockCacheRepository) as domain.CacheRepository value in argument to services.NewTaskService: *mocks.MockCacheRepository does not implement domain.CacheRepository (wrong type for method Get)\\n\\t\\thave Get(context.Context, string) (string, error)\\n\\t\\twant Get(context.Context, string) ([]byte, error)\"",
        "internal\\tracing\\business.go:40:6: exported: type name will be used as tracing.TracingConfig by other packages, and that stutters; consider calling this Config (revive)",
        "type TracingConfig struct {",
        "     ^",
        "internal\\tracing\\business.go:735:83: unused-parameter: parameter 'attributes' seems to be unused, consider removing or renaming it as _ (revive)",
        "func (btt *BusinessTransactionTracer) shouldSample(template *TransactionTemplate, attributes map[string]interface{}) bool {",
        "                                                                                  ^"
      ],
      "NonFixableReason": "BUSINESS_LOGIC"
    }
  ],
  "TotalGAPs": 2,
  "Score": 90,
  "AutoFixable": 0,
  "Manual": 2
}