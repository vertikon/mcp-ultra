# SECURITY_NOTE: This is a TEMPLATE file - contains NO actual credentials
# This template shows the structure for creating Kubernetes secrets
# All ${VARIABLE} placeholders must be replaced with actual values before deployment

apiVersion: v1
kind: Secret
metadata:
  name: mcp-ultra-secrets
  namespace: mcp-ultra
  labels:
    app.kubernetes.io/name: mcp-ultra
    app.kubernetes.io/component: secrets-template
    template: "true"  # Marks this as a template file
type: Opaque

# TEMPLATE STRUCTURE (replace ${VARIABLES} with real values):
stringData:
  # Database configuration (replace with actual connection details)
  DB_HOST: "${DB_HOST:-localhost}"
  DB_PORT: "${DB_PORT:-5432}"
  DB_NAME: "${DB_NAME:-mcp_ultra}"
  DB_USER: "${DB_USER:-postgres}"
  DB_PASSWORD: "${DB_PASSWORD}"  # REQUIRED: Set via environment

  # Security configuration (generate with scripts/generate-secrets.go)
  JWT_SECRET: "${JWT_SECRET}"                    # REQUIRED: Generate secure value
  ENCRYPTION_KEY: "${ENCRYPTION_KEY}"           # REQUIRED: Generate secure value
  AUDIT_LOG_ENCRYPTION_KEY: "${AUDIT_LOG_ENCRYPTION_KEY}"  # REQUIRED: Generate secure value

  # Service tokens (generate unique tokens for each service)
  GRPC_SERVER_TOKEN: "${GRPC_SERVER_TOKEN}"     # REQUIRED: Generate secure token
  GRPC_CLIENT_TOKEN: "${GRPC_CLIENT_TOKEN}"     # REQUIRED: Generate secure token

  # Message queue configuration
  NATS_URL: "${NATS_URL:-nats://nats-service:4222}"
  NATS_TOKEN: "${NATS_TOKEN}"                   # REQUIRED: Generate secure token

  # Monitoring configuration
  PROMETHEUS_PASSWORD: "${PROMETHEUS_PASSWORD}" # OPTIONAL: Generate if needed
  GRAFANA_PASSWORD: "${GRAFANA_PASSWORD}"       # OPTIONAL: Generate if needed

  # API keys configuration (JSON array format)
  API_KEYS: '["${API_KEY_1}","${API_KEY_2}"]'  # REQUIRED: Generate UUIDs

  # Observability configuration
  OTLP_AUTH_TOKEN: "${OTLP_AUTH_TOKEN}"         # OPTIONAL: Set if using authentication

---
# DEPLOYMENT INSTRUCTIONS:
#
# 1. Generate secrets:
#    go run scripts/generate-secrets.go > .env.secrets
#
# 2. Source the secrets:
#    source .env.secrets
#
# 3. Apply with environment substitution:
#    envsubst < secrets.template.yaml | kubectl apply -f -
#
# 4. Verify deployment:
#    kubectl get secrets -n mcp-ultra
#
# SECURITY WARNINGS:
# - Never commit files with actual secret values
# - Use different secrets for each environment
# - Rotate secrets regularly (every 90 days)
# - Monitor secret access and usage