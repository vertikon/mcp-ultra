{
  "permissions": {
    "allow": [
    "Read(/E:\\\\vertikon\\\\business**)",
	    "List(/E:\\\\vertikon\\\\business**)",
			"Write(/E:\\\\vertikon\\\\business**)",
				"Search(/E:\\\\vertikon\\\\business**)",
    "List(/E:\\vertikon\\**)",
    "Write(/E:\\vertikon\\**)",
    "Search(/E:\\vertikon\\**)",
      "Read(/E:\\\\vertikon\\\\.claude\\\\**)",
      "Write(/E:\\\\vertikon\\\\.claude\\\\**)",
      "Bash(*)",
      "PowerShell(*)",
      "Execute(go:*)",
      "Execute(python:*)",
      "Execute(pip:*)",
      "Execute(git:*)",
      "Execute(npm:*)",
      "Execute(npx:*)",
      "Execute(yarn:*)",
      "Execute(docker:*)",
      "Network(*)",
      "Execute(C:\\\\Program Files\\\\Go\\\\bin\\\\go.exe:*)",
      "Execute(C:\\\\Users\\\\Notebook\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python313\\\\python.exe:*)",
      "Execute(C:\\\\Program Files\\\\nodejs\\\\npm.cmd:*)",
      "Execute(C:\\\\Program Files\\\\Git\\\\bin\\\\git.exe:*)",
      "Execute(C:\\\\Program Files\\\\Docker\\\\Docker\\\\resources\\\\docker.exe:*)",
      "Execute(C:\\\\Windows\\\\System32\\\\find.exe:*)",
      "Execute(C:\\\\Windows\\\\System32\\\\where.exe:*)",
      "Execute(C:\\\\Tools\\\\MCP-Ultra-Validator.exe:*)",
      "Write(/E:\\\\vertikon\\\\.logs\\\\agent\\\\**)",
    "Install(npm:*)",
	"Install(pnpm:*)",
    "Install(pip:*)",
    "Install(go-mod:*)",
    "Install(python-venv:*)",
    "Install(nuget:*)"
    ],
    "deny": [
      "Execute(*:rm -rf /*)",
      "Execute(*:format*)",
      "Execute(*:shutdown*)",
      "Execute(*:del /q /s C:\\\\*)",
      "Execute(*:rmdir /s /q *)"
    ],
    "ask": [
      "Execute(*:sudo*)",
      "Execute(*:docker rm*)",
      "Execute(*:git push --force*)",
      "Execute(*:git filter-branch*)"
    ],
    "additionalDirectories": [
	  "E:\\\\vertikon\\\\business\"
      "E:\\\\vertikon\\\\.claude\\\\claude-code",
      "C:\\\\Users\\\\Notebook\\\\go",
      "C:\\\\Users\\\\Notebook\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python313",
      "C:\\\\Users\\\\Notebook\\\\AppData\\\\Local\\\\Programs\\\\Git",
      "C:\\\\Users\\\\Notebook\\\\AppData\\\\Local\\\\Programs\\\\Microsoft VS Code",
      "C:\\\\Users\\\\Notebook\\\\AppData\\\\Roaming\\\\npm",
      "C:\\\\Go",
      "C:\\\\Program Files\\\\nodejs",
      "C:\\\\Program Files\\\\Docker\\\\Docker",
      "C:\\\\Program Files\\\\PostgreSQL\\\\17"
    ]
  },
  "workspaceSettings": {
    "defaultWorkspace": "E:\\\\vertikon\\\\business\\\\SaaS\\\\marketing",
    "autoValidation": {
      "enabled": true,
      "mcpValidator": "E:\\\\vertikon\\\\business\\\\SaaS\\\\templates\\\\validador-mcp-ultra\\\\validator.exe",
      "validationDocs": "E:\\\\vertikon\\\\business\\\\SaaS\\\\templates\\\\validador-mcp-ultra\\\\docs\\\\ARCHITECTURE.md",
      "minScore": 80,
      "runOnSave": true
    }
  },
  "developmentSettings": {
    "goPath": "C:\\\\Users\\\\Notebook\\\\go",
    "pythonPath": "C:\\\\Users\\\\Notebook\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python313",
    "nodePath": "C:\\\\Program Files\\\\nodejs",
    "gitPath": "C:\\\\Users\\\\Notebook\\\\AppData\\\\Local\\\\Programs\\\\Git",
    "dockerPath": "C:\\\\Program Files\\\\Docker\\\\Docker"
  },
  "logging": {
    "enabled": true,
    "level": "info",
    "logPath": "E:\\\\vertikon\\\\.logs\\\\claude"
  },
  "projectInfo": {
    "name": "MCP Meta Suite",
    "description": "Enterprise marketing automation and webhook management platform",
    "version": "1.0.0",
    "type": "monorepo",
    "technologies": ["TypeScript", "Go", "React", "Next.js", "Node.js"],
    "architecture": "microservices"
  },
  "workspaceConfig": {
    "packageManager": "pnpm",
    "nodeVersion": "20+",
    "typescriptStrict": true,
    "monorepoRoot": true
  },
  "buildCommands": {
    "install": "pnpm install",
    "build": "pnpm build",
    "dev": "pnpm dev",
    "test": "pnpm test",
    "test:e2e": "pnpm test:e2e",
    "lint": "pnpm lint",
    "typecheck": "pnpm type-check",
    "format": "pnpm format",
    "clean": "pnpm clean"
  },
  "testCommands": {
    "unit": "pnpm test",
    "integration": "pnpm test:integration", 
    "e2e": "pnpm test:e2e",
    "playwright": "pnpm playwright test",
    "coverage": "pnpm test --coverage"
  },
  "lintCommands": {
    "eslint": "pnpm lint",
    "prettier": "pnpm format",
    "typecheck": "pnpm type-check"
  },
  "packagePaths": {
    "packages": [
      "packages/core-security",
      "packages/net-client", 
      "packages/realtime",
      "packages/offline-inbox",
      "packages/feature-flags",
      "packages/multi-cache",
      "packages/advanced-monitoring",
      "packages/event-sourcing",
      "packages/blue-green-deployment"
    ],
    "apps": [
      "apps/admin-web"
    ],
    "services": [
      "core/mcp-meta-auth",
      "core/mcp-policy-monitor", 
      "core/mcp-meta-health",
      "channels/mcp-fb-marketing",
      "channels/mcp-fb-pages",
      "channels/mcp-ig-graph",
      "channels/mcp-wa-cloud",
      "channels/mcp-messenger-api",
      "mcp-webhook-meta",
      "intelligence/mcp-insights-api",
      "intelligence/mcp-analytics-hub",
      "intelligence/mcp-conversions-api",
      "intelligence/mcp-audience-network",
      "automation/mcp-automation-flows",
      "automation/mcp-event-processor",
      "automation/mcp-webhook-manager",
      "commerce/mcp-social-commerce",
      "commerce/mcp-video-commerce",
      "commerce/mcp-ar-effects"
    ]
  },
  "contextFiles": [
    "package.json",
    "tsconfig.json", 
    "pnpm-workspace.yaml",
    "playwright.config.ts",
    "go.mod",
    "README.md",
    "docs/mcp_meta_suite_blueprint_completo_para_desenvolvimento_com_claude_code_admin_web_user_web_app_pwa_flutter.md",
    "docs/api/mcp-meta-suite-openapi.yaml"
  ],
  "ignorePatterns": [
    "node_modules/**",
    "dist/**",
    "build/**",
    ".next/**",
    "coverage/**",
    "test-results/**",
    "*.log",
    ".env.local",
    ".DS_Store",
    "Thumbs.db"
  ],
  "customCommands": {
    "setup": {
      "description": "Setup complete development environment",
      "command": "pnpm install && pnpm build",
      "workingDirectory": "."
    },
    "dev:admin": {
      "description": "Start admin web app in development mode",
      "command": "pnpm --filter @mcp/admin-web dev",
      "workingDirectory": "."
    },
    "build:packages": {
      "description": "Build all TypeScript packages",
      "command": "pnpm --filter './packages/*' build",
      "workingDirectory": "."
    },
    "validate": {
      "description": "Validate project integration",
      "command": "node scripts/validate-integration.js",
      "workingDirectory": "."
    },
    "docker:build": {
      "description": "Build Docker images for all services",
      "command": "docker-compose build",
      "workingDirectory": "."
    },
    "go:test": {
      "description": "Run Go tests for all microservices",
      "command": "go test ./...",
      "workingDirectory": "."
    }
  },
  "environmentVariables": {
    "NODE_ENV": "development",
    "NEXT_PUBLIC_API_BASE_URL": "http://localhost:8080",
    "NEXT_PUBLIC_WS_BASE_URL": "ws://localhost:8080",
    "PNPM_HOME": "~/.local/share/pnpm"
  },
  "debugConfiguration": {
    "typescript": {
      "sourceMap": true,
      "target": "ES2022",
      "module": "ESNext",
      "strict": true
    },
    "node": {
      "version": "20",
      "inspector": true
    },
    "go": {
      "version": "1.21",
      "modules": true
    }
  },
  "deploymentConfig": {
    "environments": ["development", "staging", "production"],
    "defaultEnvironment": "development",
    "docker": {
      "enabled": true,
      "composeFile": "docker-compose.yml"
    },
    "kubernetes": {
      "enabled": true,
      "namespace": "mcp-meta-suite",
      "manifests": "deploy/k8s/"
    }
  },
  "securitySettings": {
    "enableCSP": true,
    "enableHTTPS": false,
    "enableHSTS": true,
    "sensitiveFilePatterns": [
      "*.key",
      "*.pem", 
      "*.env*",
      "*secret*",
      "*password*"
    ]
  },
  "documentation": {
    "readme": "README.md",
    "api": "docs/api/mcp-meta-suite-openapi.yaml",
    "architecture": "docs/mcp_meta_suite_blueprint_completo_para_desenvolvimento_com_claude_code_admin_web_user_web_app_pwa_flutter.md",
    "deployment": "docs/DEPLOYMENT_GUIDE.md"
  },
  "ai": {
    "codeStyle": "enterprise",
    "securityFocus": "high",
    "testCoverage": "comprehensive",
    "patterns": [
      "microservices",
      "circuit-breaker", 
      "event-sourcing",
      "cqrs",
      "clean-architecture"
    ],
    "preferences": {
      "typescript": {
        "strictMode": true,
        "noImplicitAny": true,
        "exactOptionalPropertyTypes": true
      },
      "react": {
        "hooks": true,
        "functionalComponents": true,
        "typescript": true
      },
      "testing": {
        "framework": "jest",
        "e2e": "playwright",
        "coverage": ">90%"
      }
    }
  },
  "hooks": {
    "pre-commit": "pnpm lint && pnpm type-check",
    "pre-push": "pnpm test",
    "post-install": "pnpm build"
  }
}